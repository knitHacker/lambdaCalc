data Term a where
    Lit :: Int -> Term Int
    Succ :: Term Int -> Term Int
    IsZero :: Term Into -> Term Bool
    If :: Term Bool -> Term a -> Term a -> Term a
    Pair :: Term a -> Term b -> Term (a,b)

eval :: Term a -> a
eval (Lit i) = i
eval (Succ t) = 1 + eval t 
eval (IsZero t) = eval t == 0
eval (If b e1 e2) = if b then eval e1 else eval e2
eval (Pair a b) = eval (a,b)
